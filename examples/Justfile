set dotenv-load := true
set dotenv-path := "../.env"

# Set CC flags
export CC_FLAGS := "-Wl,--error-limit=0 -flto -O0 -std=gnu23 -I/opt/sdk"
export POLKATOOL_FLAGS := "--min-stack-size 131072 --dispatch-table '_jb_hook_accumulate,_jb_hook_accumulate,_jb_hook_accumulate,_jb_hook_accumulate'"
export IMAGE := "ggwpez/service-builder"

default:
	@echo "Usage: just build <name>"
	@echo "Available examples:"
	@ls *.c | sed 's/\.c$//'

# Build a specific example by name (without .c extension)
build name: output
	just compile output/{{name}}.elf {{name}}.c
	just link output/{{name}}.jam output/{{name}}.elf

output:
	mkdir -p output

compile out_file *in_files:
	#!/usr/bin/env bash
	set -e

	# List all files in /opt/sdk
	FILES=$(ls ../sdk/*.c)
	# Replace their relative path with an absolute path of /opt/sdk
	FILES=$(echo $FILES | sed 's|../sdk/|/opt/sdk/|g')

	$DOCKER run --rm -v{{justfile_directory()}}:/app -v{{justfile_directory()}}/../sdk:/opt/sdk {{IMAGE}} polkavm-cc \
		{{CC_FLAGS}} \
		{{in_files}} \
		$FILES \
		-o {{out_file}}

link out_file *in_files:
	@$DOCKER run --rm -v{{justfile_directory()}}:/app -v{{justfile_directory()}}/../sdk:/opt/sdk {{IMAGE}} polkatool link \
		{{POLKATOOL_FLAGS}} \
		{{in_files}} \
		-o {{out_file}}

clean:
	rm -rf output/

watch:
	ls . | entr -c "just"
